type: edu
files:
- name: src/server/Main.java
  visible: true
  text: |-
    package server;

    public class Main {

        public static void main(String[] args) {
            System.out.println("Hello, world!");
        }
    }
  learner_created: false
- name: test/FileServerTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;
    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testing.TestedProgram;


    public class FileServerTest extends StageTest<String> {

        @DynamicTestingMethod
        CheckResult test() throws InterruptedException {

            TestedProgram client = new TestedProgram("client");
            TestedProgram server = new TestedProgram("server");
            server.setReturnOutputAfterExecution(true);

            server.startInBackground();

            Thread.sleep(1000);
            String serverOutput = server.getOutput().trim();

            String serverStartedMessage = "Server started!";
            if (!serverOutput.equals(serverStartedMessage)) {
                throw new WrongAnswer("Server output should be \"" + serverStartedMessage + "\" until the client connects!");
            }

            String clientOutput = client.start().trim();
            serverOutput = server.getOutput().trim();

            if (clientOutput.isEmpty()) {
                return CheckResult.wrong("Client output shouldn't be empty!");
            }

            if (serverOutput.equals(serverStartedMessage)) {
                return CheckResult.wrong("After the client connects to the server you should output the received data!");
            }

            if (!serverOutput.contains("Received: Give me everything you have!")) {
                return CheckResult.wrong("Server output should contain \"Received: Give me everything you have!\"");
            }

            if (!serverOutput.contains("Sent: All files were sent!")) {
                return CheckResult.wrong("Server output should contain \"Sent: All files were sent!\"");
            }

            if (serverOutput.indexOf("Sent: All files were sent!") < serverOutput.indexOf("Received: Give me everything you have!")) {
                return CheckResult.wrong("The server should print \"Sent: All files were sent!\" only after " +
                    "\"Received: Give me everything you have!\" was printed!");
            }

            if (!clientOutput.contains("Sent: Give me everything you have!")) {
                return CheckResult.wrong("Client output should contain \"Sent: Give me everything you have!\"");
            }

            if (!clientOutput.contains("Received: All files were sent!")) {
                return CheckResult.wrong("Client output should contain \"Received: All files were sent!\"");
            }

            if (clientOutput.indexOf("Received: All files were sent!") < clientOutput.indexOf("Sent: Give me everything you have!")) {
                return CheckResult.wrong("The client should print \"Received: All files were sent!\" only after " +
                    "\"Sent: Give me everything you have!\" was printed!");
            }

            return CheckResult.correct();
        }
    }
  learner_created: false
- name: src/client/Main.java
  visible: true
  learner_created: true
- name: src/client/Client.java
  visible: true
  learner_created: true
- name: src/server/Server.java
  visible: true
  learner_created: true
- name: src/server/Menu.java
  visible: true
  learner_created: true
- name: src/server/Commands.java
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/learn/step/5426#comment
status: Failed
feedback:
  message: |-
    Wrong answer in test #1

    Can&#39;t find &#39;/server/data&#39; folder. You should store all saved files in it!
    The folder should be created even if the server wasn&#39;t started!

    Please find below the output of your program during this failed test.
    Note that the &#39;&gt;&#39; character indicates the beginning of the input line.

    ---

    Server started!
    Enter action (1 - get a file, 2 - create a file, 3 - delete a file): &gt; exit
    The request was sent.
  time: Sun, 19 Dec 2021 17:07:38 UTC
record: 2
